# Autogenerated wrapper script for Vulkan_Headers_jll for any
export vk_xml

## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "LD_LIBRARY_PATH"
LIBPATH_default = ""

# Relative path to `vk_xml`
const vk_xml_splitpath = ["share", "vulkan", "registry", "vk.xml"]

# This will be filled out by __init__() for all products, as it must be done at runtime
vk_xml_path = ""

# vk_xml-specific global declaration
# This will be filled out by __init__()
vk_xml = ""


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"Vulkan_Headers")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list
    global vk_xml_path = normpath(joinpath(artifact_dir, vk_xml_splitpath...))

    global vk_xml = vk_xml_path
    # Filter out duplicate and empty entries in our PATH and LIBPATH entries
    filter!(!isempty, unique!(PATH_list))
    filter!(!isempty, unique!(LIBPATH_list))
    global PATH = join(PATH_list, ':')
    global LIBPATH = join(vcat(LIBPATH_list, [joinpath(Sys.BINDIR, Base.LIBDIR, "julia"), joinpath(Sys.BINDIR, Base.LIBDIR)]), ':')
end  # __init__()

